version: '3'

services:
  ollama:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ollama_models:/data/models
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_VLLM_HOST=vllm:8000
      - OLLAMA_LLM_BACKEND=${OLLAMA_LLM_BACKEND:-llama}  # Use llama.cpp by default, set to "vllm" to use vLLM
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    depends_on:
      - vllm

  vllm:
    image: ghcr.io/mistralai/vllm:latest
    ports:
      - "8000:8000"
    volumes:
      - ollama_models:/data/models
    environment:
      - MODEL_ID=${VLLM_MODEL_PATH:-/data/models}
      - GPU_MEMORY_UTILIZATION=${VLLM_GPU_MEMORY_UTILIZATION:-0.9}
      - TENSOR_PARALLEL_SIZE=${VLLM_TENSOR_PARALLEL_SIZE:-1}
    command: 
      - "--host=0.0.0.0"
      - "--port=8000"
      - "--tensor-parallel-size=${VLLM_TENSOR_PARALLEL_SIZE:-1}"
      - "--gpu-memory-utilization=${VLLM_GPU_MEMORY_UTILIZATION:-0.9}"
      - "--max-model-len=${VLLM_MAX_MODEL_LEN:-8192}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped

volumes:
  ollama_data:    # For Ollama configuration and metadata
  ollama_models:  # Shared volume for model files 